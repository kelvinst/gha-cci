name: Elixir CI

on:
  push

permissions:
  contents: read

jobs:
  context:
    name: GitHub Context
    runs-on: ubuntu-latest

    steps:
    - name: Show GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - name: Show Runner context
      env:
        RUNNER_CONTEXT: ${{ toJson(runner) }}
      run: echo "$RUNNER_CONTEXT"

  prepare_deps:
    name: Prepare dependencies
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Elixir
      uses: erlef/setup-beam@988e02bfe678367a02564f65ca2e37726dc0268f
      with:
        elixir-version: '1.14.0-rc.0'
        otp-version: '25.0.3'
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-deps-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-deps-
    - name: Restore deps compiled files cache
      uses: actions/cache@v3
      with:
        path: _build
        key: ${{ runner.os }}-deps-compiled-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-deps-compiled-
    - name: Prepare dependencies
      run: mix ci.deps.prepare

  compile:
    name: Compile
    runs-on: ubuntu-latest
    needs: prepare_deps

    steps:
    - uses: actions/checkout@v3
    - name: Set up Elixir
      uses: erlef/setup-beam@988e02bfe678367a02564f65ca2e37726dc0268f
      with:
        elixir-version: '1.14.0-rc.0'
        otp-version: '25.0.3'
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-deps-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-deps-
    - name: Install dependencies
      run: mix deps.get
    - name: Restore compiled files cache
      uses: actions/cache@v3
      with:
        path: _build
        key: ${{ runner.os }}-compiled-${{ github.sha }}
    - name: Check compilation warnings
      run: mix ci.compile

  db:
    name: Database
    runs-on: ubuntu-latest
    needs: compile

    steps:
    - uses: harmon758/postgresql-action@v1
      with:
        postgresql version: '13'
        postgresql user: 'postgres'
        postgresql password: 'postgres'
    - uses: actions/checkout@v3
    - name: Set up Elixir
      uses: erlef/setup-beam@988e02bfe678367a02564f65ca2e37726dc0268f
      with:
        elixir-version: '1.14.0-rc.0'
        otp-version: '25.0.3'
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    - name: Restore compiled files cache
      uses: actions/cache@v3
      with:
        path: _build
        key: ${{ runner.os }}-compiled-${{ github.sha }}
    - name: Check migrations are rollbackable
      run: mix ci.db

  deps:
    name: Dependencies
    runs-on: ubuntu-latest
    needs: compile

    steps:
    - uses: actions/checkout@v3
    - name: Set up Elixir
      uses: erlef/setup-beam@988e02bfe678367a02564f65ca2e37726dc0268f
      with:
        elixir-version: '1.14.0-rc.0'
        otp-version: '25.0.3'
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    - name: Restore compiled files cache
      uses: actions/cache@v3
      with:
        path: _build
        key: ${{ runner.os }}-compiled-${{ github.sha }}
    - name: Check dependencies
      run: mix ci.deps.run

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    needs: compile

    steps:
    - uses: actions/checkout@v3
    - name: Set up Elixir
      uses: erlef/setup-beam@988e02bfe678367a02564f65ca2e37726dc0268f
      with:
        elixir-version: '1.14.0-rc.0'
        otp-version: '25.0.3'
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    - name: Restore compiled files cache
      uses: actions/cache@v3
      with:
        path: _build
        key: ${{ runner.os }}-compiled-${{ github.sha }}
    - name: Check dependencies
      run: mix ci.docs

  typecheck:
    name: Typecheck
    runs-on: ubuntu-latest
    needs: compile

    steps:
    - uses: actions/checkout@v3
    - name: Set up Elixir
      uses: erlef/setup-beam@988e02bfe678367a02564f65ca2e37726dc0268f
      with:
        elixir-version: '1.14.0-rc.0'
        otp-version: '25.0.3'
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    - name: Restore compiled files cache
      uses: actions/cache@v3
      with:
        path: _build
        key: ${{ runner.os }}-compiled-${{ github.sha }}
    - name: Restore typecheck deps cache
      uses: actions/cache@v2
      id: plt-cache
      with:
        path: plts
        key: ${{ runner.os }}-plts-${{ hashFiles('**/mix.lock') }}
    - name: Prepare typecheck deps
      if: steps.plt-cache.outputs.cache-hit != 'true'
      run: mix ci.typecheck.prepare
    - name: Check types
      run: mix ci.typecheck.run

  test_prepare_deps:
    name: Prepare test dependencies
    runs-on: ubuntu-latest

    env:
      MIX_ENV: test

    steps:
    - uses: actions/checkout@v3
    - name: Set up Elixir
      uses: erlef/setup-beam@988e02bfe678367a02564f65ca2e37726dc0268f
      with:
        elixir-version: '1.14.0-rc.0'
        otp-version: '25.0.3'
    - name: Restore test dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-test-deps-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-test-deps-
    - name: Restore deps compiled files cache
      uses: actions/cache@v3
      with:
        path: _build
        key: ${{ runner.os }}-test-deps-compiled-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-test-deps-compiled-
    - name: Prepare test dependencies
      run: mix ci.deps.prepare

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: test_prepare_deps

    steps:
    - uses: harmon758/postgresql-action@v1
      with:
        postgresql version: '13'
        postgresql user: 'postgres'
        postgresql password: 'postgres'
    - uses: actions/checkout@v3
    - name: Set up Elixir
      uses: erlef/setup-beam@988e02bfe678367a02564f65ca2e37726dc0268f
      with:
        elixir-version: '1.14.0-rc.0'
        otp-version: '25.0.3'
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    - name: Run tests
      run: mix ci.test

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [db, deps, docs, test, typecheck]
    if: ${{ github.ref == 'refs/heads/master' }}

    env:
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

    steps:
      - uses: actions/checkout@v2
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only
